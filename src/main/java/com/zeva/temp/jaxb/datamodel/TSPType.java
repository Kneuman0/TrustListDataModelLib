//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.02.16 at 11:23:28 AM EST 
//


package com.zeva.temp.jaxb.datamodel;

import java.util.List;

import javafx.beans.property.SimpleObjectProperty;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.zeva.tlGen.dataModel.ProviderAttribute;


/**
 * <p>Java class for TSPType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TSPType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://uri.etsi.org/02231/v2#}TSPInformation"/>
 *         &lt;element ref="{http://uri.etsi.org/02231/v2#}TSPServices"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TSPType", propOrder = {
    "tspInformation",
    "tspServices"
})
public class TSPType extends ProviderAttribute{

    @XmlElement(name = "TSPInformation", required = true)
    protected TSPInformationType tspInformation;
    @XmlElement(name = "TSPServices", required = true)
    protected TSPServicesListType tspServices;
    
    @XmlTransient
    private SimpleObjectProperty<ProviderAttribute> nameProp;
    
    public TSPType(){
    	this.nameProp = new SimpleObjectProperty<ProviderAttribute>(this);
    }

    /**
     * Gets the value of the tspInformation property.
     * 
     * @return
     *     possible object is
     *     {@link TSPInformationType }
     *     
     */
    public TSPInformationType getTSPInformation() {
        return tspInformation;
    }

    /**
     * Sets the value of the tspInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TSPInformationType }
     *     
     */
    public void setTSPInformation(TSPInformationType value) {
        this.tspInformation = value;
    }

    /**
     * Gets the value of the tspServices property.
     * 
     * @return
     *     possible object is
     *     {@link TSPServicesListType }
     *     
     */
    public TSPServicesListType getTSPServices() {
    	
        return tspServices == null ? (tspServices = new TSPServicesListType()) : tspServices;
    }

    /**
     * Sets the value of the tspServices property.
     * 
     * @param value
     *     allowed object is
     *     {@link TSPServicesListType }
     *     
     */
    public void setTSPServices(TSPServicesListType value) {
        this.tspServices = value;
    }
    
    public List<TSPServiceType> getServices(){
    	return this.getTSPServices().getTSPService();
    }

	@Override
	public SimpleObjectProperty<ProviderAttribute> nameProperty() {
		// TODO Auto-generated method stub
		return nameProp;
	}
	

	@Override
	public ProviderAttributeType getType() {
		// TODO Auto-generated method stub
		return ProviderAttributeType.PROVIDER;
	}

	/**
	 * Use of this method assumed a check has been placed using the 
	 * getType() first to determine the Type of this subclass
	 */
	@SuppressWarnings("unchecked")
	@Override
	public TSPType getEncapsulatedBean() {
		// TODO Auto-generated method stub
		return this;
	}

	@Override
	public String getStringName() {
		// TODO Auto-generated method stub
		return this.getTSPInformation().getTSPName().getName().get(0).getValue();
	}
	
	public String getFirstTSPInformationURI(){
		return getTSPInformation().getTSPInformationURI().getURI().get(0).getValue();
	}
	
	@Override
	public boolean equals(Object object){
		if(object instanceof TSPType){
			TSPType provider = (TSPType)object;
			return provider.getFirstTSPInformationURI().equals(this.getFirstTSPInformationURI());
		}else{
			return false;
		}
	}

	@Override
	public ProviderAttribute initialize() {
		return this;
	}

}
